# -*- coding: utf-8 -*-

from bs4 import BeautifulSoup
from datetime import datetime

class AttackReporter:
    @staticmethod
    def generate_syn_report(target: str, packets: int, duration: float):
        soup = BeautifulSoup(features='html.parser')
        soup.append(soup.new_tag("!DOCTYPE html"))
        
        # =====================
        # HTML Structure
        # =====================
        html = soup.new_tag('html', lang='en')
        head = soup.new_tag('head')
        body = soup.new_tag('body')
        
        # =====================
        # HEAD Section
        # =====================
        meta = soup.new_tag('meta', charset='UTF-8')
        title = soup.new_tag('title')
        title.string = "Pentest Report | Ethical Hacking Tool"
        style = soup.new_tag('style')
        style.string = """
            body { font-family: 'Segoe UI', sans-serif; margin: 40px; background: #f8f9fa; }
            .header { 
                background: linear-gradient(135deg, #2c3e50, #3498db);
                color: white; 
                padding: 30px; 
                border-radius: 10px;
                margin-bottom: 30px;
            }
            .report-table {
                width: 100%;
                border-collapse: collapse;
                box-shadow: 0 1px 3px rgba(0,0,0,0.1);
                background: white;
            }
            .report-table th {
                background: #3498db;
                color: white;
                padding: 15px;
                text-align: left;
            }
            .report-table td {
                padding: 12px;
                border-bottom: 1px solid #eee;
            }
            .legal {
                margin-top: 40px;
                padding: 20px;
                background: #fff3cd;
                border-left: 4px solid #ffc107;
                color: #856404;
                border-radius: 5px;
            }
            .signature {
                margin-top: 30px;
                padding: 15px;
                background: #e9ecef;
                text-align: center;
                border-radius: 5px;
            }
        """
        
        head.extend([meta, title, style])
        
        # =====================
        # BODY Content
        # =====================
        # Header
        header = soup.new_tag('div', **{'class': 'header'})
        h1 = soup.new_tag('h1')
        h1.string = "Ethical Hacking Report"
        header.append(h1)
        body.append(header)
        
        # Report Metadata
        meta_table = soup.new_tag('table', **{'class': 'report-table'})
        header_row = soup.new_tag('tr')
        header_row.append(soup.new_tag('th', string="Test Parameters"))
        header_row.append(soup.new_tag('th', string="Values"))
        meta_table.append(header_row)
        
        rows = [
            ("Target IP", target),
            ("Total Packets", f"{packets:,}"),
            ("Duration", f"{duration:.2f} seconds"),
            ("Test Date", datetime.now().strftime("%Y-%m-%d %H:%M")),
            ("Tool Version", "v1.0.0"),
            ("Protocol", "TCP/SYN")
        ]
        
        for row in rows:
            tr = soup.new_tag('tr')
            td1 = soup.new_tag('td', string=row[0])
            td2 = soup.new_tag('td', string=str(row[1]))
            tr.append(td1)
            tr.append(td2)
            meta_table.append(tr)
        
        body.append(meta_table)
        
        # =====================
        # Legal Disclaimer
        # =====================
        legal = soup.new_tag('div', **{'class': 'legal'})
        legal.append(soup.new_tag('h3', string="Legal Notice"))
        legal.append(soup.new_tag('p', string="This report was generated using certified ethical hacking tools under strict compliance with:"))
        ul = soup.new_tag('ul')
        ul.extend([
            soup.new_tag('li', string="Computer Fraud and Abuse Act (CFAA) guidelines"),
            soup.new_tag('li', string="EC-Council Ethical Hacking Standards"),
            soup.new_tag('li', string="Written authorization from target system owner")
        ])
        legal.append(ul)
        legal.append(soup.new_tag('p', string="Unauthorized use of this tool is strictly prohibited. All activities are logged."))
        body.append(legal)
        
        # =====================
        # Signature Block
        # =====================
        signature = soup.new_tag('div', **{'class': 'signature'})
        signature.append(soup.new_tag('p', string="Generated by:"))
        sig_text = soup.new_tag('div', style="margin-top:10px; font-weight:bold; color: #2c3e50")
        sig_text.string = "Petre Radu Catalin | Certified Ethical Hacker"
        signature.append(sig_text)
        signature.append(soup.new_tag('p', style="margin-top:5px;", 
                                    string=f"Â© {datetime.now().year} LunaLynx12. All rights reserved."))
        body.append(signature)
        
        # =====================
        # Final Assembly
        # =====================
        html.extend([head, body])
        soup.append(html)
        
        # Save report
        with open("syn_flood_report.html", "w", encoding='utf-8') as f:
            f.write(soup.prettify())
        print("[+] Generated report: syn_flood_report.html")